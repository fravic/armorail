package septenary.duelparty {    public class FighterFactory {        public static const TIER_PRICING:Array = [25, 75, 150];        private static const HEALTH_MULTIPLIER:Number = 2.0;     //Edit for survival balancing        private static const FIGHTERS_BY_TIER:Array = [            ["Mortar", "Flamethrower", "GatlingGun", "PulseGun", "Ballista", "MetalShield"],            ["RailGun", "LightningGun", "MachineGun", "MissileLauncher", "EnergyStore", "ShieldGun"],            ["TacticalNuke", "MTHEL", "Rocket", "Neotank"]        ];        private static const PROBABILITY_PER_FIGHTER = [            [10, 10, 10, 10, 10, 7],            [10, 10, 10, 10, 10, 7],            [8, 10, 10, 10]        ];		        public static function randomFighterFromTier(tier:int):Fighter {            Utilities.assert(tier - 1 < FIGHTERS_BY_TIER.length, "Invalid tier ("+ tier +") selected!");            var tierFighters:Array = FIGHTERS_BY_TIER[tier - 1];            var totalTierWeight:int = 0;            for (var i:int = 0; i < PROBABILITY_PER_FIGHTER[tier - 1].length; i++) {                totalTierWeight += PROBABILITY_PER_FIGHTER[tier - 1][i];            }            var selectWeight:int = Math.round(Math.random() * totalTierWeight);            var fighterIndex:int = 0;            for (i = 0; i < PROBABILITY_PER_FIGHTER[tier - 1].length; i++) {                selectWeight -= PROBABILITY_PER_FIGHTER[tier - 1][i];                if (selectWeight <= 0) {                    fighterIndex = i;                    break;                }            }                        var type:String = tierFighters[fighterIndex];            var newFighter = FighterFactory["new" + type]();            newFighter.health *= HEALTH_MULTIPLIER;            return newFighter;        }        public static function newMortar():Fighter {            var fighter:Fighter = new Mortar();            fighter.fighterName = "Mortar";            fighter.attack = 4;            fighter.health = 6;            fighter.counter = 0;            fighter.bountyCoins = 10;            fighter.specialDesc = "A heavy cannon.  Can't counterattack.";			fighter.attackBehaviour = BattleBehaviours.mortarAttackBehaviour;            return fighter;        }        public static function newFlamethrower():Fighter {            var fighter:Fighter = new Flamethrower();            fighter.fighterName = "Flamethrower";            fighter.attack = 6;            fighter.health = 4;            fighter.counter = 1;            fighter.bountyCoins = 10;            return fighter;        }        public static function newGatlingGun():Fighter {            var fighter:Fighter = new GatlingGun();            fighter.fighterName = "Gatling Gun";            fighter.attack = 5;            fighter.health = 5;            fighter.counter = 7;            fighter.bountyCoins = 10;            return fighter;        }        public static function newPulseGun():Fighter {            var fighter:Fighter = new PulseGun();            fighter.fighterName = "Pulse Gun";            fighter.attack = 4;            fighter.health = 3;            fighter.counter = 2;            fighter.bountyCoins = 10;            return fighter;        }        public static function newBallista():Fighter {            var fighter:Fighter = new Ballista();            fighter.fighterName = "Ballista";            fighter.attack = 7;            fighter.health = 1;            fighter.counter = 5;            fighter.bountyCoins = 10;            return fighter;        }        public static function newMetalShield():Fighter {            var fighter:Fighter = new MetalShield();            fighter.fighterName = "Metal Shield";            fighter.attack = 0;            fighter.health = 24;            fighter.counter = 0;            fighter.bountyCoins = 10;            return fighter;        }        public static function newRailGun():Fighter {            var fighter:Fighter = new RailGun();            fighter.fighterName = "Rail Gun";            fighter.attack = 5;            fighter.health = 8;            fighter.counter = 7;            fighter.bountyCoins = 10;            return fighter;        }        public static function newLightningGun():Fighter {            var fighter:Fighter = new LightningGun();            fighter.fighterName = "Lightning Gun";            fighter.attack = 7;            fighter.health = 8;            fighter.counter = 5;            fighter.bountyCoins = 10;            return fighter;        }        public static function newMachineGun():Fighter {            var fighter:Fighter = new MachineGun();            fighter.fighterName = "Machine Gun";            fighter.attack = 6;            fighter.health = 9;            fighter.counter = 6;            fighter.bountyCoins = 10;            return fighter;        }        public static function newMissileLauncher():Fighter {            var fighter:Fighter = new MissileLauncher();            fighter.fighterName = "Missiles";            fighter.attack = 10;            fighter.health = 6;            fighter.counter = 5;            fighter.bountyCoins = 10;            return fighter;        }        public static function newEnergyStore():Fighter {            var fighter:Fighter = new EnergyStore();            fighter.fighterName = "Energy Store";            fighter.attack = 5;            fighter.health = 12;            fighter.counter = 0;            fighter.bountyCoins = 10;            return fighter;        }        public static function newShieldGun():Fighter {            var fighter:Fighter = new ShieldGun();            fighter.fighterName = "Shield Gun";            fighter.attack = 4;            fighter.health = 20;            fighter.counter = 4;            fighter.bountyCoins = 10;            return fighter;        }        public static function newTacticalNuke():Fighter {            var fighter:Fighter = new NuclearWarhead();            fighter.fighterName = "Tactical Nuke";            fighter.attack = 30;            fighter.health = 5;            fighter.counter = 30;            fighter.bountyCoins = 10;            return fighter;        }        public static function newMTHEL():Fighter {            var fighter:Fighter = new MTHEL();            fighter.fighterName = "M.T.H.E.L.";            fighter.attack = 14;            fighter.health = 7;            fighter.counter = 8;            fighter.bountyCoins = 10;            return fighter;        }        public static function newRocket():Fighter {            var fighter:Fighter = new Rocket();            fighter.fighterName = "Rocket";            fighter.attack = 0;            fighter.health = 12;            fighter.counter = 0;            fighter.bountyCoins = 10;            return fighter;        }        public static function newNeotank():Fighter {            var fighter:Fighter = new Neotank();            fighter.fighterName = "Neotank";            fighter.attack = 8;            fighter.health = 25;            fighter.counter = 25;            fighter.bountyCoins = 10;            return fighter;        }    }}